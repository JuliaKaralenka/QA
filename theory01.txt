1. Что подразумевается под тестовой средой?

   Тестовая среда — это настройка программного и аппаратного обеспечения для групп тестирования для выполнения тестовых случаев.

2. В чем отличие build (debug build) от release (release build)?

   Билд это номер, даваемый ПО при передаче от разработчиков тестировщикам. Релиз — это номер, даваемый ПО при передаче конечному пользователю.

3. Основные фазы тестирования?

   – модульное (компонентное) тестирование Component Testing, Unit Testing;
      Компонентами для тестирования могут выступать отдельный метод/функция в коде программы; отдельная часть программы (регистрация, логин, аккаутн пользователя);
      отдельная программа из сложной интеграционнной системы.

   – интеграционное тестирование Integration Testing;
      Тестирование части системы или системы в целом, состоящей из двух или более частей, при этом, основной задачей является поиск дефектов, связанных
      с ошибками взаимодействия между этими частямию
      * Компонентное интеграционное тестирование Component Integration Testing - проверка взаимодействия между несколькими компонентами одного приложения.
      * Системное интеграционное тестирование System Integration Testing- тестирование взаимодействия между всеми компонентами системы, между различными приложениями, объединёнными
        в систему, интерфейсами связи с внешними системами (интернет и тд).   
    
   – регрессионное тестирование Regression Testing;
     Проверка того, что то что работало, по-прежнему работает после внесения изменений в код системы (исправление ошибки, реализация новой функции).
     Во время тестирования проводится постоянно, например, во время проверки исправления ошибкинужно обращать внимание на работающую рядом функциональность.
   – приемочное тестирование Acceptance Testing. 
  
     Тестирование по отношению к потребностям и требованиям пользователя, проводимое с целью дать возможность пользователям, заказчикам определить, ринимают стстему или нет.
     Выполняется на заключительном этапе перед передачей продукта заказчику/конечному пользователю.

4. Что такое импакт анализ?

    Импакт анализ (Impact Analysis)— это инструмент в разработке ПО, который применяется программистами для улучшения тестирования.
    Основная идея импакт анализа — это указание затронутых мест (affected areas) в проекте при разработке новой или изменении старой функциональности. Во время разработки часто возникают ситуации,
    когда вносишь изменения в одном месте, а это влияет либо на весь проект либо на несколько мест в проекте. При таких изменениях сложно вспомнить и протестировать все
    необходимые места, особенно если они не покрыты тестами. В результате этого, после сдачи очередного релиза, клиенты начинают обращаться с жалобами на то, что что-то
    поломалось или не работает.
    Затронутые области требуют большего внимания во время проведения регрессионного тестирования.

    Импакт анализ может быть полезным в следующих случаях:

    * есть изменения в требованиях;
    * получен запрос на внесение изменений в продукт;
    * ожидается внедрение нового модуля или функциональности в существующий продукт;
    * каждый раз, когда есть изменения в существующих модулях или функциональностях продукта.

5. Критерии выбора тестов?

   Требования к идеальному критерию тестирования:

   * Критерий должен быть достаточным, т.е. показывать, когда некоторое конечное множество тестов достаточно для тестирования данной про  граммы.
   * Критерий должен быть полным, т.е. в случае ошибки должен существовать тест из множества тестов, удовлетворяющих критерию, который раскрывает ошибку.
   * Критерий должен быть надежным, т.е. любые два множества тестов, удовлетворяющих ему, одновременно должны раскрывать или не раскрывать ошибки программы.
   * Критерий должен быть легко проверяемым, например вычисляемым на тестах.